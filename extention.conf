;!
;! Automatically generated configuration file
;! Filename: extensions.conf (/app/asterisk/etc/asterisk/extensions.conf)
;! Generator: Manager
;! Creation Date: Thu Dec  5 10:21:56 2013
;!
[globals]
DEF_PERMISSION = internal
MEETME_EXIT_CONTEXT = conf-tools
TRANSFER_CONTEXT = from-internal-xfer
MIXMON_FORMAT = wav
MIXMON_DIR = /app/asterisk/var/spool/asterisk/monitor/
MIXMON_POST =
CONF_SIZE_LIMIT = 25
#include extensions_globals_additional.conf
[general]
static = yes
writeprotect = no
clearglobalvars = yes
#include extensions_additional.conf

;###################################################################
;extensions
;###################################################################
[set-language]
exten = _.,1,ExecIf($["${DB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${DB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = _.,2,Return

[app-blacklist-check]
exten = s,1(check),GotoIf($["${BLACKLIST()}"="1"]?blacklisted)
exten = s,n,Set(CALLED_BLACKLIST=1)
exten = s,n,Return()
exten = s,n(blacklisted),Answer
exten = s,n,Wait(1)
exten = s,n,Zapateller()
exten = s,n,Playback(ss-noservice)
exten = s,n,Hangup

[conf-inv-menu]
exten = s,1,Wait(1)
exten = s,n,Set(__HAS_JOIN=invited)
exten = s,n,ExecIf($["${DB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${DB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,GotoIf($["${CONF_INV_CONFIRM}" = "no"]?bypass)
exten = s,n,Background(this-call-may-be&to-join-a-meeting&followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Background(this-call-may-be&to-join-a-meeting&followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Background(this-call-may-be&to-join-a-meeting&followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Macro(hangupcall)
exten = s,n(bypass),Background(this-call-may-be&to-join-a-meeting,)
exten = s,n,Goto(ext-conference,${CONF_ROOM},1)
exten = s,n,Macro(hangupcall)
exten = 1,1,Goto(ext-conference,${CONF_ROOM},1)
exten = 2,1,Macro(hangupcall)
exten = i,1,Goto(s,1) 

[conf-tools]
exten = 0,1,Set(DIALED=${EXTEN})
exten = 0,n,Goto(entry-gate,1)
exten = 1,1,Set(DIALED=${EXTEN})
exten = 1,n,Goto(entry-gate,1)
exten = 2,1,Set(DIALED=${EXTEN})
exten = 2,n,Goto(entry-gate,1)
exten = 3,1,Set(DIALED=${EXTEN})
exten = 3,n,Goto(entry-gate,1)
exten = entry-gate,1,Set(CONF_MENU_LOCK=${TRYLOCK(LOCK_CONF_MENU_${CONF_ROOM})})
exten = entry-gate,n,GotoIf($[${CONF_MENU_LOCK} = 0]?occupied)
exten = entry-gate,n,Goto(e${DIALED},1)
exten = entry-gate,n(occupied),Playback(im-sorry&please-try-again-later)
exten = entry-gate,n,Goto(exit-gate,1)
exten = exit-gate,1,Set(CONF_MENU_LOCK=${UNLOCK(LOCK_CONF_MENU_${CONF_ROOM})})
exten = exit-gate,n,Goto(ext-conference,${CONF_ROOM},1)
exten = e0,1,Wait(1)
exten = e0,n,Set(__CONF_INV_CONFIRM=yes)
exten = e0,n,Set(CONF_LOCKED=${MEETME_INFO(lock,${CONF_ROOM})})
exten = e0,n,GotoIf($[${CONF_LOCKED} = 1]?locked)
exten = e0,n,Read(DEST_EXT,conf-invite,,i)
exten = e0,n,Dial(local/${DEST_EXT}@from-internal,,gG(conf-tools,conf-inv,1)m(rbt))
exten = e0,n,Goto(exit-gate,1)
exten = e0,n(locked),Playback(im-sorry&conf-lockednow)
exten = e0,n,Goto(exit-gate,1)
exten = e1,1,Wait(1)
exten = e1,n,Set(__CONF_INV_CONFIRM=no)
exten = e1,n,Set(CONF_LOCKED=${MEETME_INFO(lock,${CONF_ROOM})})
exten = e1,n,GotoIf($[${CONF_LOCKED} = 1]?locked)
exten = e1,n,Read(DEST_EXT,conf-invite,,i)
exten = e1,n,Dial(local/${DEST_EXT}@from-internal,,gG(conf-tools,conf-inv,1)m(rbt))
exten = e1,n,Goto(exit-gate,1)
exten = e1,n(locked),Playback(im-sorry&conf-lockednow)
exten = e1,n,Goto(exit-gate,1)
exten = e2,1,Set(__CONF_INV_CONFIRM=NO)
exten = e2,n,Set(CONF_LOCKED=${MEETME_INFO(lock,${CONF_ROOM})})
exten = e2,n,GotoIf($[${CONF_LOCKED} = 1]?locked)
exten = e2,n,Set(MCB_LOCAL=${CONF_ROOM})
exten = e2,n,Read(MCB_REMOTE,conf-invite,,i)
exten = e2,n,Read(MCB_PASS,conference-password-mono,,,,5)
exten = e2,n,Set(MCB_PASS,${FILTER(0-9,${MCB_PASS})})
exten = e2,n,GotoIf($[${MCB_REMOTE} = ${MCB_LOCAL}]?invalid)
exten = e2,n,Set(MCB_PARENT_CHAN=${CHANNEL:0:1}${CUT(CHANNEL,/,2-)})
exten = e2,n,ExecIf($["${DISACONTEXT}" != ""]?Set(MCB_PARENT_CHAN=${CUT(MCB_PARENT_CHAN,@,1)}-${MCB_PARENT_CHAN:-10}))
exten = e2,n,Originate(local/${MCB_REMOTE}-${MCB_LOCAL}-${MCB_PARENT_CHAN}@mcb-create,exten,mcb-connect,${MCB_REMOTE}-${MCB_LOCAL},1)
exten = e2,n,Goto(exit-gate,1)
exten = e2,n(locked),Playback(im-sorry&conf-lockednow)
exten = e2,n,Goto(exit-gate,1)
exten = e2,n(invalid),playback(sorry-cant-let-you-do-that)
exten = e2,n,Goto(exit-gate,1)
exten = e3,1,Wait(1)
exten = e3,n,Set(I=1)
exten = e3,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${CONF_ROOM})})
exten = e3,n,While($[${MCB_LOCK} < 1])
exten = e3,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${CONF_ROOM})})
exten = e3,n,EndWhile
exten = e3,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${CONF_ROOM}/REMOTE_CHANNELS)})
exten = e3,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CHANNELS,\,,${I})})
exten = e3,n,GotoIf($["${TOKEN}" = ""]?exit_loop)
exten = e3,n,MeetMeChannelAdmin(${TOKEN},k)
exten = e3,n,Set(I=$[${I}+1])
exten = e3,n,Goto(loop)
exten = e3,n(exit_loop),Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${CONF_ROOM})})
exten = e3,n,Goto(exit-gate,1)
exten = conf-inv,1,Goto(exit-gate,1)
exten = conf-inv,n,Set(__CONF_OPTIONS=${ORI_OPTIONS})
exten = conf-inv,n,Goto(conf-inv-menu,s,1)
exten = conf-inv,n,Macro(hangupcall)
exten = h,1,Set(CONF_MENU_LOCK=${UNLOCK(LOCK_CONF_MENU_${CONF_ROOM})})
exten = h,n,Goto(sub-dial-conference,h,1)

[faxcontext]
exten = fax,1,Goto(fax2email,${EXTEN},1)

[bad-number]
exten = _X!,1,Macro(user-callerid,)
exten = _X!,n,ResetCDR()
exten = _X!,n,NoCDR()
exten = _X!,n,Log(WARNING, "Ohh...Sorry, there is no route used for destination number ${EXTEN}")
exten = _X!,n,Progress()
exten = _X!,n,Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer)
exten = _X!,n,Congestion(20)
exten = _X!,n,Hangup

[asterisk_guitools]
exten = executecommand,1,System(${command})
exten = executecommand,n,answer(,nocdr)
exten = executecommand,n,Hangup()
exten = record_vmenu,1,ExecIf($["${DB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${DB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = record_vmenu,n,Answer
exten = record_vmenu,n,Playback(speak-louder)
exten = record_vmenu,n,Record(${var1},0,500,k)
exten = record_vmenu,n,ExecIf($["${DB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${DB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = record_vmenu,n,Playback(vm-saved)
exten = record_vmenu,n,Playback(vm-goodbye)
exten = record_vmenu,n,Hangup
exten = play_file,1,Answer
exten = play_file,n,Playback(${var1})
exten = play_file,n,Hangup
exten = _REC.,1,Set(__RECORD_VMENU=ON)
exten = _REC.,n,Goto(from-internal,${EXTEN:3},1)
exten = trunk-proxy,1,Log(NOTICE, "trunk-proxy: Begin processing...")
exten = trunk-proxy,n,set(i=0)
exten = trunk-proxy,n(check),Log(NOTICE, "trunk-proxy: Auth user...")
exten = trunk-proxy,n,Set(i=$[${i} + 1])
exten = trunk-proxy,n,Read(PROXYUSER,please-enter-your&user&number&then-press-pound,,,,3)
exten = trunk-proxy,n,GotoIf($["${PROXYUSER}" = ""]?bad)
exten = trunk-proxy,n,Read(PWD,enter-password&then-press-pound,,,,3)
exten = trunk-proxy,n,GotoIf($["${PWD}" = ""]?bad)
exten = trunk-proxy,n,Set(PROXY_PWD=${DB(AAUSER/${PROXYUSER}/PROXY_PWD)})
exten = trunk-proxy,n,GotoIf($["${PWD}" = "${PROXY_PWD}"]?good:bad)
exten = trunk-proxy,n,Macro(hangupcall,)
exten = trunk-proxy,n(good),Set(AAUSER={PROXYUSER})
exten = trunk-proxy,n(dial),Read(DIALNUM,pls-entr-num-uwish2-call&then-press-pound,,,,3)
exten = trunk-proxy,n,Goto(outbound-allroutes,${DIALNUM},1)
exten = trunk-proxy,n,Macro(hangupcall,)
exten = trunk-proxy,n(bad),Wait(1)
exten = trunk-proxy,n,GotoIf($[${i} >= 3]?thankyou)
exten = trunk-proxy,n,Log(WARNING, "Auth failured: Asking for user name again")
exten = trunk-proxy,n,Read(PROXYUSER,please-enter-your&user&number&then-press-pound,,,,5)
exten = trunk-proxy,n,Goto(check)
exten = trunk-proxy,n(thankyou),playback(sorry-cant-let-you-do-that&auth-thankyou)
exten = trunk-proxy,n,Macro(hangupcall,)

[fax2email]
exten = _.,1,Macro(receiveFax)
exten = h,1,Log(NOTICE, "--- receive end -----")
exten = h,n,Log(NOTICE, "${FAXSTATUS} --- ${FAXERROR}")
exten = h,n,ExecIf($["${FAXSTATUS}" == "SUCCESS"]?System(/app/asterisk/var/lib/asterisk/scripts/fax2email.sh "${FAXMAIL}" "${FAXFILE}" "${FAXNAME}" "${CALLERID(num)}" "${CALLERID(name)}" "${RECEIVEEXTEN}" "${FAXOPT(pages)}" "${FAXDATE}" "${UNIQUEID}" "${ENV(AST_BASE)}"))
exten = h,n,ExecIf($["${FAXSTATUS}" != "SUCCESS"]?System(rm -f "${FAXFILE}" &))

[ext-did-catchall]
exten = s,1,Log(WARNING, "Ohh...Sorry, no DID or CID Match")
exten = s,n(a2),Answer
exten = s,n,Wait(2)
exten = s,n,Playback(ss-noservice)
exten = s,n,SayAlpha(${FROM_DID})
exten = s,n,Hangup
exten = _.,1,Set(__FROM_DID=${EXTEN})
exten = _.,n,Log(WARNING, "Received an unknown call with DID set to ${EXTEN}")
exten = _.,n,Goto(s,a2)
exten = h,1,Hangup

[disa-dial]
exten = fax,1,Goto(fax2email,${EXTEN},1)
exten = _.,1,Log(NOTICE, "called ${EXTEN} in ${DISACONTEXT} by ${DISA}")
exten = _.,n,Set(EXTTOCALL=${EXTEN})  
exten = _.,n,Dial(Local/${EXTEN}@${DISACONTEXT},${RINGTIME},${DISA_HANGUP}m(rbt))
exten = _.,n,Gosub(s-${DIALSTATUS},1)
exten = _.,n,Goto(${DISA})
exten = s-ANSWER,1,Return()
exten = s-CANCEL,1,Return()
exten = s-BUSY,1,Playtones(busy)
exten = s-BUSY,n,Wait(3)
exten = s-BUSY,n,Return()
exten = _s-.,1,Log(WARNING, "DISA Dial failed due to ${DIALSTATUS} - returning to dial tone")
exten = _s-.,n,Playback(cannot-complete-as-dialed&check-number-dial-again)
exten = _s-.,n,Return()
exten = i,1,Playback(cannot-complete-as-dialed&check-number-dial-again)
exten = i,n,GotoIf($["${DISA_HANGUP}" = "Hg"]?${DISA})

[simple_vm]
exten = _X!,1,Voicemail(${EXTEN},u)

[queue-member-manager]
exten = handle_member,1,Verbose(2, Looping through queues to log in or out queue members)
exten = handle_member,n,Set(thisActiveMember=${CHANNEL(channeltype)}/${CHANNEL(peername)})
exten = handle_member,n,Set(queue_field=2)
exten = handle_member,n,Set(thisQueueXtn=${CUT(QUEUES,\,,${queue_field})})
exten = handle_member,n,While($[${EXISTS(${thisQueueXtn})}])
exten = handle_member,n,Macro(member-loginlogout)
exten = handle_member,n,Set(queue_field=$[${queue_field} + 1])
exten = handle_member,n,Set(thisQueueXtn=${CUT(QUEUES,\,,${queue_field})})
exten = handle_member,n,EndWhile()

;[ext-conference]
[ringgroups]
;[ext-queues]
[voicemenus]
;[voicemailgroups]
[directory]
;[pagegroups]


;####################################################################
;include 
;####################################################################
[ext-paging]
include = pagegroups
include = page_an_extension

[page_an_extension]
include = app-paging
include = app-intercom

[from-internal]
include = from-internal-xfer
include = bad-number

[from-internal-xfer]
include = parkedcalls
include = ext-local-confirm
include = from-internal-additional
[parkedcalls]
;[ext-fax]
[ext-local-confirm]
[from-internal-additional]
include = speed-dial
include = ext-group
include = ext-findmefollow
include = ext-paging
include = app-dialvm
include = app-vmmain
include = ext-conference
include = ext-queues
include = app-blacklist
include = app-pickup
include = app-cfb-on
include = app-cfb-off
include = app-cfn-on
include = app-cfn-off
include = app-cfu-on
include = app-cfu-off
include = app-dnd-on
include = app-dnd-off
include = app-agent-pause
include = app-agent-unpause
include = directory
include = ext-directory
include = voicemenus
include = voicemailgroups
include = ext-local
include = ext-fax
include = outbound-allroutes
;[ext-group]
;[ext-findmefollow]
[app-blacklist]
include = app-blacklist-add-wrap
include = app-blacklist-remove-wrap
;[ext-local]
;[disa]
;[outbound-allroutes]
[default]
include = operator

[from-trunk]
include = ext-did
include = from-did-direct
include = ext-did-catchall

;[ext-did]
[from-did-direct]
include = ext-findmefollow
include = ext-local


;#################################
;Macros
;#################################
[macro-set-call-options]
exten = s,1,Set(CALL_OPTIONS=${ARG1}${DIAL_OPTIONS})
exten = s,n,ExecIf($["${FROM_TRUNK}" = "yes"]?Set(CALL_OPTIONS=${ARG1}${FROM_TRUNK_OPTIONS}))
exten = s,n,ExecIf($[$["${AUTO_RECORDING}" = "ON"] & $["${RECORD_PROMPT}" = "yes"]]?Set(CALL_OPTIONS=${CALL_OPTIONS}A(dialog-being-recorded)m(rbt)))

[macro-pagingintercom]
exten = s,1,SIPAddHeader(Alert-Info: ${PAGING_HEADER})
exten = s,n,SIPAddHeader(Call-Info: <sip:__SIP_CONTACT_HOST__>\;answer-after=0)
exten = s,n,Set(CDR(userfield)=PG)
exten = s,n,Page(${ARG1},${ARG2})
exten = s,n,Hangup

[macro-dial]
exten = s,1,GotoIf($["${MOHCLASS}" != ""]?dial)
exten = s,n,Set(MOHCLASS=${DB(AAUSER/${ARG1}/musicclass)})
exten = s,n(dial),SetMusicOnHold(${MOHCLASS})
exten = s,n,Set(DIAL_STR=${DB(AAUSER/${ARG1}/DIAL)})
exten = s,n,Set(DIALED_EXTEN=${DIAL_STR})
exten = s,n,Set(CHANNEL_TYPE=${SHIFT(DIALED_EXTEN,/)})
exten = s,n,ExecIf($["${CHANNEL_TYPE}" == "IAX2"]?Set(DIAL_STR=${DIAL_STR}/${DIALED_EXTEN}))
exten = s,n,Set(CALL_RT=${ARG2})
exten = s,n,Macro(set-call-options,${DISA_HANGUP})
exten = s,n,ExecIf($["${FROM_IVR}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = s,n,ExecIf($["${FROM_IVR}" != "" | "${FOLLOWME_USER}" == "${ARG1}"]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = s,n,ExecIf($["${FROM_DIRECTORY}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = s,n,SIPRemoveHeader(Alert-Info:)
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "uri"]?SIPAddHeader(Alert-Info: <http://127.0.0.1/${DID_ALERTINFO}>))
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "info"]?SIPAddHeader(Alert-Info: <http://127.0.0.1>\;info=${DID_ALERTINFO}))
exten = s,n,Dial(${DIAL_STR},${CALL_RT},${CALL_OPTIONS})

[macro-exten-vm]
exten = s,1,Macro(user-callerid)
exten = s,n,Set(CDR(userfield)=EXT)
exten = s,n,Set(VMBOX=${ARG1})
exten = s,n,Set(EXTTOCALL=${ARG2})
exten = s,n,Set(DNDON=${DB(AAUSER/${EXTTOCALL}/DND)})
;exten = s,n,Set(CFBEXT=${DB(AAUSER/${EXTTOCALL}/CFB)})
;exten = s,n,Set(CFNEXT=${DB(AAUSER/${EXTTOCALL}/CFN)})
;exten = s,n,Set(CFUEXT=${DB(AAUSER/${EXTTOCALL}/CFU)})
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(CFBEXT=)
exten = s,n,Macro(holidaytime-system,${DB(AAUSER/${EXTTOCALL}/CFBTIMETYPE)},${EXTTOCALL})
exten = s,n,ExecIf($["${MATCHTIME}" == "1"]?Set(CFBEXT=${DB(AAUSER/${EXTTOCALL}/CFB)}))
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(CFNEXT=)
exten = s,n,Macro(holidaytime-system,${DB(AAUSER/${EXTTOCALL}/CFNTIMETYPE)},${EXTTOCALL})
exten = s,n,ExecIf($["${MATCHTIME}" == "1"]?Set(CFNEXT=${DB(AAUSER/${EXTTOCALL}/CFN)}))
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(CFUEXT=)
exten = s,n,Macro(holidaytime-system,${DB(AAUSER/${EXTTOCALL}/CFUTIMETYPE)},${EXTTOCALL})
exten = s,n,ExecIf($["${MATCHTIME}" == "1"]?Set(CFUEXT=${DB(AAUSER/${EXTTOCALL}/CFU)}))
exten = s,n,ExecIf($[$["${IN_FOLLOWME}" == "yes"] | $["${NODEST}" != ""]]?Set(DNDON=no))
exten = s,n,ExecIf($[$["${IN_FOLLOWME}" == "yes"] | $["${NODEST}" != ""]]?Set(CFBEXT=))
exten = s,n,ExecIf($[$["${IN_FOLLOWME}" == "yes"] | $["${NODEST}" != ""]]?Set(CFNEXT=))
exten = s,n,ExecIf($[$["${IN_FOLLOWME}" == "yes"] | $["${NODEST}" != ""]]?Set(CFUEXT=))
exten = s,n,ExecIf($["${DNDON}" = "yes"]?Set(DIALSTATUS=BUSY))
exten = s,n,GotoIf($["${DNDON}" = "yes"]?sent2vm)
exten = s,n,GotoIf($["${CFUEXT}" != ""]?docfu,1)
exten = s,n,Set(CALL_RT=${RINGTIME}
exten = s,n,Set(USER_RT=${DB(AAUSER/${EXTTOCALL}/RT)})
exten = s,n,ExecIf($[$["${USER_RT}" != ""]]?Set(CALL_RT=${USER_RT}))
exten = s,n,Macro(record-check,${AAUSER}-${EXTTOCALL},)
exten = s,n,Macro(dial,${EXTTOCALL},${CALL_RT})
exten = s,n,Set(SV_DIALSTATUS=${DIALSTATUS})
exten = s,n,GosubIf($[$["${SV_DIALSTATUS}"="NOANSWER" | "${SV_DIALSTATUS}"="CHANUNAVAIL"] & $["${CFNEXT}"!=""]]?docfn,1)
exten = s,n,GosubIf($[$["${SV_DIALSTATUS}"="BUSY"] & $["${CFBEXT}"!=""]]?docfb,1)
exten = s,n,Set(DIALSTATUS=${SV_DIALSTATUS})
exten = s,n,ExecIf($["${IN_FOLLOWME}" = "yes"]?Macro(hangupcall))
exten = s,n(sent2vm),GotoIf($["${VMBOX}" = "novm" | "${TRANSFERERNAME}" != "" | "${NODEST}" != ""| "${RECORD_VMENU}" = "ON"]?s-${DIALSTATUS},1)
exten = s,n,Log(NOTICE, "Sending to Voicemail box ${EXTTOCALL}")
exten = s,n,Macro(vm,${VMBOX},${DIALSTATUS},${IVR_RETVM})
exten = docfu,1,Macro(set-call-options,)
exten = docfu,n,Set(CF_USER=${EXTTOCALL})
exten = docfu,n,Goto(from-internal,${CFUEXT},1)
exten = docfu,n,Return
exten = docfn,1,Macro(set-call-options,)
exten = docfn,n,Set(CF_USER=${EXTTOCALL})
exten = docfn,n,Goto(from-internal,${CFNEXT},1)
exten = docfn,n,Return
exten = docfb,1,Macro(set-call-call-options,)
exten = docfb,n,Set(CF_USER=${EXTTOCALL})
exten = docfb,n,Goto(from-internal,${CFBEXT},1)
exten = docfb,n,Return
exten = s-BUSY,1,Log(WARNING, "Extension is reporting BUSY and not passing to Voicemail")
exten = s-BUSY,n,Playtones(busy)
exten = s-BUSY,n,Busy(20)
exten = _s-.,1,Log(WARNING, "Extension is reporting ${DIALSTATUS} and not passing to Voicemail")
exten = _s-.,n,Playtones(congestion)
exten = _s-.,n,Congestion(10)
exten = exit,1,Playback(beep&line-busy-transfer-menu&silence/1)
exten = exit,n(return),MacroExit()

[macro-hangupcall]
exten = s,1(theend),Hangup

[macro-agent-add]
exten = s,1,Wait(1)
exten = s,n,Set(CDR(userfield)=FC)
exten = s,n,Macro(user-callerid,SKIPTTL)
exten = s,n(a5),Set(CALLBACKNUM=${AAUSER})
exten = s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten = s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten = s,n(a7),GotoIf($["${CALLBACKNUM}" = "${ARG1}"]?invalid)
exten = s,n,ExecIf($["${QREGEX}" != ""]?GotoIf($["${REGEX("${QREGEX}" ${CALLBACKNUM})}" = "0"]?invalid))
exten = s,n,ExecIf($["${ARG2}" != ""]?Authenticate(${ARG2}))
exten = s,n,Set(DIALNUM=${CALLBACKNUM})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(DIALNUM=${CHANNEL(dahdi_channel)}))
exten = s,n(a9),AddQueueMember(${ARG1},${CHANNEL(channeltype)}/${DIALNUM})
exten = s,n,UserEvent(Agentlogin,Agent: ${CALLBACKNUM})
exten = s,n,Wait(1)
exten = s,n,Playback(agent-loginok&with&extension)
exten = s,n,SayDigits(${CALLBACKNUM})
exten = s,n,Hangup
exten = s,n,MacroExit()
exten = s,n(invalid),Playback(pbx-invalid)
exten = s,n,Goto(a3)

[macro-agent-del]
exten = s,1,Wait(1)
exten = s,n,Set(CDR(userfield)=FC)
exten = s,n,Macro(user-callerid,SKIPTTL)
exten = s,n(a5),Set(CALLBACKNUM=${AAUSER})
exten = s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten = s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten = s,n,Set(DIALNUM=${CALLBACKNUM})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(DIALNUM=${CHANNEL(dahdi_channel)}))
exten = s,n(a7),RemoveQueueMember(${ARG1},${CHANNEL(channeltype)}/${DIALNUM})
exten = s,n,UserEvent(RefreshQueue)
exten = s,n,Wait(1)
exten = s,n,GotoIf($["${RQMSTATUS}" = "NOTDYNAMIC"]?static)
exten = s,n,Playback(agent-loggedoff)
exten = s,n,Hangup
exten = s,n(static),Playback(static-agent-cant-logout)
exten = s,n,Hangup

[macro-check-permission]
exten = s,1,Set(OUT_PERMISSION=${DB(AAUSER/${AAUSER}/PERMISSION)})
exten = s,n,ExecIf($["${DISA_PERMISSION}" != ""]?Set(OUT_PERMISSION=${DISA_PERMISSION}))
exten = s,n,ExecIf($["${CF_USER}" != ""]?Set(OUT_PERMISSION=${DB(AAUSER/${CF_USER}/PERMISSION)}))
exten = s,n,ExecIf($["${FOLLOWME_USER}" != ""]?Set(OUT_PERMISSION=${DB(AAUSER/${FOLLOWME_USER}/PERMISSION)}))
exten = s,n,ExecIf($["${OUT_PERMISSION}" = ""]?Set(OUT_PERMISSION=${DEF_PERMISSION}))
exten = s,n,Set(PERMI_COUNT=${FIELDQTY(OUT_PERMISSION,-)})
exten = s,n,Set(i=1)
exten = s,n,While($[${i} <= ${PERMI_COUNT}])
exten = s,n,Set(tmp=${CUT(OUT_PERMISSION,,${i})})
exten = s,n,Set(PERMI_MATCH=${IF($[${tmp} = ${ARG2}]?true:false)})
exten = s,n,Set(i=$[${i} + 1])
exten = s,n,GotoIf($[${PERMI_MATCH} = true]?break:continue)
exten = s,n(break),ExitWhile()
exten = s,n(continue),ContinueWhile()
exten = s,n,EndWhile

exten = s,n,GotoIf($[${ARG3} = ALLOW_ALL]?check_per:check_no)     
exten = s,n(check_per),GotoIf($[${PERMI_MATCH} = false]?nopermission,1)
exten = s,n(check_no),GotoIf($[${PERMI_MATCH} = true]?macroexit,1)     
                                                                       
;exten = s,n,GotoIf($[${ARG3} = ALLOW_ALL]?macroexit,1)                
exten = s,n,GotoIf($[${ARG2} = none]?macroexit,1)
exten = s,n,AGI(match_callerid.py,${ARG3},${AAUSER})
exten = s,n,GotoIf($[${MATCH_CALLERID_RES} = 0]?nopermission,1)

exten = nopermission,1,Log(WARNING, "Denied Because no Permission for user ${AAUSER}, ${ARG2} is Required")
exten = nopermission,n,Macro(hangupcall)

exten = macroexit,1,MacroExit()
[sub-pincheck]
exten = s,1,Set(outrt_passwd=${ARG3})
exten = s,n,Set(user_outrt_passwd=${DB(AAUSER/${AAUSER}/user_outrt_passwd)})
exten = s,n,ExecIf($["${user_outrt_passwd}" != ""]?Set(outrt_passwd=${user_outrt_passwd}))
exten = s,n,GotoIf($[$["${outrt_passwd}" != ""] & $["${DB(AAUSER/${AAUSER}/bypass_outrt_auth)}" != "yes"] | $["${IN_FOLLOWME}" == "yes"]]?:exit)
exten = s,n,GotoIF($[$["${IN_FOLLOWME}" == "yes"] & $[$["${ARG3}" == ""] | $["${FOLLOWME_SKIP_AUTH}" == "yes"]]]?exit)
exten = s,n,ExecIf($[$["${IVR_SUPPORT}" = "no"] | $["${IN_FOLLOWME}" == "yes"]]?Macro(hangupcall))
exten = s,n,Authenticate(${outrt_passwd},)
exten = s,n,ResetCDR()
exten = s,n(exit),Return()

[macro-dialout-trunk]
exten = s,1,Set(DIAL_TRUNK=${ARG1})
exten = s,n,Set(CDR(userfield)=TR)
exten = s,n,Gosub(sub-pincheck,s,1)
exten = s,n,GotoIf($["x${OUT_DISABLE_${DIAL_TRUNK}}" = "xon"]?disabletrunk,1)
exten = s,n,Set(DIAL_NUMBER=${ARG2})
exten = s,n,Set(DIAL_TRUNK_OPTIONS=${TRUNK_OPTIONS}${ARG4})
exten = s,n,Set(OUTBOUND_GROUP=OUT_${DIAL_TRUNK})
exten = s,n,GotoIf($["${OUT_MAXCHANS_${DIAL_TRUNK}}foo" = "foo"]?nomax)
exten = s,n,GotoIf($[ ${GROUP_COUNT(OUT_${DIAL_TRUNK})} >= ${OUT_MAXCHANS_${DIAL_TRUNK}} ]?chanfull)
exten = s,n(nomax),GotoIf($["${INTRACOMPANYROUTE}" = "yes"]?skipoutcid)
exten = s,n,Set(ori_callid=${CALLERID(all)})
exten = s,n,Macro(outbound-callerid,${DIAL_TRUNK})
exten = s,n(skipoutcid),ExecIf($["${PREFIX_TRUNK_${DIAL_TRUNK}}" != ""]?AGI(fixlocalprefix))
exten = s,n,Set(OUTNUM=${OUT_PREFIX_${DIAL_TRUNK}}${DIAL_NUMBER})
exten = s,n,Set(custom=${CUT(OUT_${DIAL_TRUNK},:,1)})
exten = s,n,ExecIf($["${MOHCLASS}"!="default" & "${MOHCLASS}"!="" & "${FORCE_CONFIRM}"="" ]?Set(DIAL_TRUNK_OPTIONS=M(setmusic^${MOHCLASS})${DIAL_TRUNK_OPTIONS}))
exten = s,n(gocall),Macro(dialout-trunk-predial-hook,)
exten = s,n,GotoIf($["${PREDIAL_HOOK_RET}" = "BYPASS"]?bypass,1)
exten = s,n,GotoIf($["${custom}" = "AMP"]?customtrunk)
exten = s,n,ExecIf($["${FROM_IVR}" != ""]?Set(DIAL_TRUNK_OPTIONS=${DIAL_TRUNK_OPTIONS}m(rbt)))
exten = s,n,ExecIf($["${ARG3}" != ""]?Set(DIAL_TRUNK_OPTIONS=${DIAL_TRUNK_OPTIONS}m(rbt)))
exten = s,n,Macro(record-check,${AAUSER},${DIAL_TRUNK})
;exten = s,n,Macro(set-call-options,${DIAL_TRUNK_OPTIONS})
exten = s,n,Set(CALL_OPTIONS=${DIAL_TRUNK_OPTIONS})
exten = s,n,ExecIf($[$["${AUTO_RECORDING}" = "ON"] & $["${RECORD_PROMPT}" = "yes"]]?Set(CALL_OPTIONS=${CALL_OPTIONS}A(dialog-being-recorded)m(rbt)))
exten = s,n,ExecIf($["${MCB_CONF_HEADER}" != ""]?Set(__DIALOUT_CHANNEL_PARENT=${CHANNEL})
exten = s,n,ExecIf($["${MCB_CONF_HEADER}" != ""]?Set(CALL_OPTIONS=gG(mcb-handling,1)${CALL_OPTIONS}))
exten = s,n,Dial(${OUT_${DIAL_TRUNK}}/${OUTNUM},300,${CALL_OPTIONS})
exten = s,n,Goto(s-${DIALSTATUS},1)
exten = s,n(customtrunk),Set(pre_num=${CUT(OUT_${DIAL_TRUNK},$,1)})
exten = s,n,Set(the_num=${CUT(OUT_${DIAL_TRUNK},$,2)})
exten = s,n,Set(post_num=${CUT(OUT_${DIAL_TRUNK},$,3)})
exten = s,n,GotoIf($["${the_num}" = "OUTNUM"]?outnum:skipoutnum)
exten = s,n(outnum),Set(the_num=${OUTNUM})
exten = s,n(skipoutnum),Dial(${pre_num:4}${the_num}${post_num},300,${DIAL_TRUNK_OPTIONS})
exten = s,n,Goto(s-${DIALSTATUS},1)
exten = s,n(chanfull),Log(WARNING, "max channels used up")
exten = s-BUSY,1,Log(WARNING, "Dial failed due to trunk reporting BUSY - giving up")
exten = s-BUSY,n,Playtones(busy)
exten = s-BUSY,n,Busy(20)
exten = s-NOANSWER,1,Log(WARNING, "Dial failed due to trunk reporting NOANSWER - giving up")
exten = s-NOANSWER,n,Playtones(congestion)
exten = s-NOANSWER,n,Congestion(20)
exten = s-CANCEL,1,Log(WARNING, "Dial failed due to trunk reporting CANCEL - giving up")
exten = s-CANCEL,n,Playtones(congestion)
exten = s-CANCEL,n,Congestion(20)
exten = s-CHANUNAVAIL,1,Set(CALLERID(all)=${ori_callid})
exten = s-CHANUNAVAIL,n,Log(WARNING, "TRUNK Dial failed due to ${DIALSTATUS} (hangupcause: ${HANGUPCAUSE}) - failing through to other trunks")
exten = _s-.,1,Set(CALLERID(all)=${ori_callid})
exten = _s-.,2,Log(WARNING, "TRUNK Dial failed due to ${DIALSTATUS} - failing through to other trunks")
exten = disabletrunk,1,Log(WARNING, "TRUNK: ${OUT_${DIAL_TRUNK}} DISABLED - falling through to next trunk")
exten = bypass,1,Log(WARNING, "TRUNK: ${OUT_${DIAL_TRUNK}} BYPASSING because dialout-trunk-predial-hook")
exten = mcb-handling,1,Goto(one)
exten = mcb-handling,n,Goto(two)
exten = mcb-handling,n(one),Log(NOTICE, "MCB Dial-out: Local leg waiting for bridge")
exten = mcb-handling,n,Wait(5)
exten = mcb-handling,n,Goto(h,1)
exten = mcb-handling,n(two),Set(MCB_REMOTE_CONFID=${MCB_RESPONSE()})
exten = mcb-handling,n,Set(SHARED(MCB_REMOTE_CONFID,${MCB_CREATE_CHAN})=${MCB_REMOTE_CONFID})
exten = mcb-handling,n,Set(SHARED(MCB_REMOTE_CHANNEL,${MCB_CREATE_CHAN})=${CHANNEL})
exten = mcb-handling,n,Bridge(${DIALOUT_CHANNEL_PARENT})
exten = h,1,Macro(hangupcall,)

[macro-user-callerid]
exten = s,1,Set(_AAUSER=${IF($["foo${AAUSER}" = "foo"]?${CALLERID(number)}:${AAUSER})})
exten = s,n,GotoIf($["${CHANNEL:0:5}" = "Local"]?report)
exten = s,n,ExecIf($["${DB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${DB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($["${IVR_LANGUAGE}" != ""]?Set(CHANNEL(language)=${IVR_LANGUAGE}))
exten = s,n,ExecIf($["${REALCALLERIDNUM:1:2}" = ""]?Set(REALCALLERIDNUM=${CALLERID(number)}))
exten = s,n,Set(AAUSERCIDNAME=${DB(AAUSER/${AAUSER}/CIDNAME)})
exten = s,n,ExecIf($["${FROM_TRUNK}" = "yes"]?Set(AAUSERCIDNAME=${CALLERID(name)}))
exten = s,n,GotoIf($["x${AAUSERCIDNAME:1:2}" = "x"]?report)
exten = s,n,Set(AAUSERCID=${IF($["${DB_EXISTS(AAUSER/${AAUSER}/CIDNUM)}" = "1"]?${DB_RESULT}:${AAUSER})})
exten = s,n,Set(CALLERID(all)="${AAUSERCIDNAME}" <${AAUSERCID}>)
;exten = s,n,ExecIf($["${DB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${DB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
;exten = s,n,ExecIf($["${IVR_LANGUAGE}" != ""]?Set(CHANNEL(language)=${IVR_LANGUAGE}))
exten = s,n(report),Set(OUTBOUNDCID=${DB(AAUSER/${AAUSER}/OUTBOUNDCID)})
exten = s,n,ExecIf($["${OUTBOUNDCID}" != ""]?Set(CALLERID(all)=${OUTBOUNDCID}))
exten = s,n,GotoIf($[ "${ARG1}" = "SKIPTTL" ]?continue)
exten = s,n,Set(__TTL=${IF($["foo${TTL}" = "foo"]?64:$[ ${TTL} - 1 ])})
exten = s,n,GotoIf($[ ${TTL} > 0 ]?continue)
exten = s,n,Wait(2)
exten = s,n,Answer
exten = s,n,Wait(2)
exten = s,n,Playback(im-sorry&an-error-has-occured&with&call-forwarding)
exten = s,n,Macro(hangupcall,)
exten = s,n,Congestion(20)
exten = s,n(continue),Log(NOTICE, "Using CallerID ${CALLERID(all)}")
exten = h,1,Macro(hangupcall,)

[macro-outbound-callerid]
exten = s,1,ExecIf($["${CALLINGPRES_SV}" != ""]?Set(CALLERPRES()=${CALLINGPRES_SV}))
exten = s,n,ExecIf($["${REALCALLERIDNUM:1:2}" = ""]?Set(REALCALLERIDNUM=${CALLERID(number)}))
exten = s,n,ExecIf($["${USEROUTCID}" != ""]?Set(USEROUTCID=))
exten = s,n(start),GotoIf($[ $["${REALCALLERIDNUM}" = ""] | $["${KEEPCID}" != "TRUE"] | $["${OUTKEEPCID_${ARG1}}" = "yes"] ]?normcid)
exten = s,n,Set(USEROUTCID=${REALCALLERIDNUM})
exten = s,n(normcid),GotoIf($["${OUTKEEPCID_${ARG1}}" = "yes"]?bypass)
exten = s,n,Set(USEROUTCID=${DB(AAUSER/${AAUSER}/OUTBOUNDCID)})
exten = s,n,Set(DOD=${DB(TRUNK_${ARG1}/DOD/${AAUSER})})
exten = s,n,ExecIf($["${DOD}" != ""]?Set(USEROUTCID=${DOD}))
exten = s,n(bypass),Set(TRUNKOUTCID=${OUT_CID_${ARG1}})
exten = s,n(globalcid),EXecIf($["${GLOBAL_OUTBOUNDCID:1:2}" != ""]?Set(CALLERID(number)=${GLOBAL_OUTBOUNDCID}))
exten = s,n,ExecIf($["${GLOBAL_OUTBOUNDCIDNAME:1:2}" != ""]?Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME}))
exten = s,n(trunkcid),ExecIf($["${TRUNKOUTCID:1:2}" != ""]?Set(CALLERID(all)=${TRUNKOUTCID}))
exten = s,n(usercid),ExecIf($["${USEROUTCID:1:2}" != ""]?Set(CALLERID(all)=${USEROUTCID}))
exten = s,n(hidecid),ExecIf($["${CALLERID(name)}"="hidden"]?Set(CALLERPRES()=prohib_passed_screen))

[macro-vm]
exten = s,1,Macro(get-vmcontext,${ARG1})
exten = s,n,Set(CDR(userfield)=VM)
exten = s,n,Goto(s-${ARG2},1)
exten = s-BUSY,1,Log(NOTICE, "BUSY voicemail")
exten = s-BUSY,n,Macro(get-vmcontext,${ARG1})
exten = s-BUSY,n,VoiceMail(${ARG1}@${VMCONTEXT},b)
exten = s-BUSY,n,Goto(exit-${VMSTATUS},1)
exten = s-NOMESSAGE,1,Log(NOTICE, "NOMESSAGE (beeb only) voicemail")
exten = s-NOMESSAGE,n,Macro(get-vmcontext,${ARG1})
exten = s-NOMESSAGE,n,VoiceMail(${ARG1}@${VMCONTEXT},s)
exten = s-NOMESSAGE,n,Goto(exit-${VMSTATUS},1)
exten = s-DIRECTDIAL,1,Log(NOTICE, "DIRECTDIAL voicemail")
exten = s-DIRECTDIAL,n,Macro(get-vmcontext,${ARG1})
exten = s-DIRECTDIAL,n,VoiceMail(${ARG1}@${VMCONTEXT},u)
exten = s-DIRECTDIAL,n,Goto(exit-${VMSTATUS},1)
exten = _s-.,1,Macro(get-vmcontext,${ARG1})
exten = _s-.,n,VoiceMail(${ARG1}@${VMCONTEXT},u)
exten = _s-.,n,Goto(exit-${VMSTATUS},1)
exten = exit-FAILED,1,GotoIf($["${ARG3}" = "RETURN"]?exit-RETURN,1)
exten = exit-FAILED,n,Hangup
exten = exit-SUCCESS,1,GotoIf($["${ARG3}" = "RETURN"]?exit-RETURN,1)
exten = exit-SUCCESS,n,Hangup
exten = exit-USEREXIT,1,GotoIf($["${ARG3}" = "RETURN"]?exit-RETURN,1)
exten = exit-USEREXIT,n,Hangup
exten = exit-RETURN,1,Log(Notice, "Returning From Voicemail because macro")
exten = t,1,Hangup

[macro-get-vmcontext]
exten = s,1,Set(VMCONTEXT=${DB(AAUSER/${ARG1}/voicemail)})
exten = s,2,GotoIf($["foo${VMCONTEXT}" = "foo"]?200)
exten = s,200,Set(VMCONTEXT=default)

[macro-findme-follow]
exten = s,1,Set(FMEXT=${ARG1})
exten = s,n,Set(__FMCIDNUM=${CALLERID(num)})
exten = s,n,Set(__FMCIDNAME=${CALLERID(name)})
exten = s,n,Set(CDR(userfield)=FM)
exten = s,n,Followme(${FMEXT},${FOLLOWMEOPTIONS})

[macro-followme]
exten = s,1,Macro(user-callerid)
exten = s,n,Set(FM_ENABLE=${ARG1})
exten = s,n,Set(CALLEXTEN=${ARG2})
exten = s,n,GotoIf($["${IN_FOLLOWME}" = "yes" | "${RECORD_VMENU}"="ON" | "${CONF_ROOM}" != ""]?disable)
exten = s,n,GotoIf($["${FM_ENABLE}" = "yes"]?enable:disable)
exten = s,n(enable),Set(__IN_FOLLOWME=yes)
exten = s,n,Answer()
exten = s,n,Set(CALL_RT=${RINGTIME})
exten = s,n,Set(USER_RT=${DB(AAUSER/${CALLEXTEN}/RT)})
exten = s,n,ExecIf($[$["${USER_RT}" != ""]]?Set(CALL_RT=${USER_RT}))
exten = s,n,Set(_FOLLOWME_USER=${CALLEXTEN})
exten = s,n,Macro(record-check,${AAUSER}-${CALLEXTEN},)
exten = s,n,Macro(dial,${CALLEXTEN},${CALL_RT})
exten = s,n,Set(_FOLLOWME_SKIP_AUTH=${ARG3})
exten = s,n,Macro(findme-follow,${CALLEXTEN})
exten = s,n,Macro(vm,${CALLEXTEN},${DIALSTATUS},${IVR_RETVM})
exten = s,n,Macro(hangupcall)
exten = s,n(disable),Goto(ext-local,${CALLEXTEN},1)
exten = h,1,Macro(hangupcall)

[macro-hunt-record-check]
exten = s,1,Set(USER_LIST=${CALLERID(num)}-${ARG1})
exten = s,n,Set(REC_ENABLE=no)
exten = s,n,Set(i=1)                                                                                                                                            
exten = s,n,While($[${i}])                                                                                                                                      
exten = s,n,Set(CUR_USER=${CUT(USER_LIST,,${i})})                                                                                                               
exten = s,n,GotoIf($["${CUR_USER}" = ""]?break)                                                                                                                 
exten = s,n,Set(REC_ENABLE=${DB(AAUSER/${CUR_USER}/AUTORECORD)})                                                                                                
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break)                                                                                                            
exten = s,n,Set(REC_ENABLE=${DB(GROUP/${CUR_USER}/AUTORECORD)})                                                                                                 
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break:continue)                                                                                                   
exten = s,n(continue),Set(i=$[${i} + 1])                                                                                                                        
exten = s,n,EndWhile()                                                                                                                                          
exten = s,n(break),Goto(final)                                                                                                                                  
exten = s,n(final),ExecIf($["${CUSTOM_PROMPT}" != ""]?Progress())                                                                                               
exten = s,n,ExecIf($["${CUSTOM_PROMPT}" != ""]?Playback(${CUSTOM_PROMPT},noanswer))                                                                             
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?record:normal)                                                                                                    
exten = s,n(record),Log(NOTICE, "Auto record is enabled.")                                                                                                      
exten = s,n,Set(CALLFILENAME=auto-${STRFTIME(${EPOCH},,%s)}-${CDR(src)}-${CDR(dst)})                                                                            
exten = s,n,Set(CDR(RECORD_FILES)=${CDR(RECORD_FILES)}${CALLFILENAME}.${MIXMON_FORMAT}@)                                                           
exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Progress())                                                                                       
exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Playback(dialog-being-recorded,noanswer))                                                         
exten = s,n,Set(AUTO_RECORDING=ON)                                                                                                                 
exten = s,n,MixMonitor(${MIXMON_DIR}/${CALLFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST})                                  
exten = s,n(normal),ExecIf($["${CALLERID(ANI-num-valid)}" = "1"]?Set(TOUCH_MONITOR=${CALLERID(ANI-num)}-${ARG1}))

[macro-dial-huntgroup]
exten = s,1,AGI(get_ring_group_members.py, ${ARG1})
exten = s,n,Set(STRATEGY=${DB(GROUP/${ARG1}/STRATEGY)})
exten = s,n,Set(GTIMER=${DB(GROUP/${ARG1}/TIMER)})
exten = s,n,Set(CDR(userfield)=RG)
exten = s,n,Set(TOUCH_MONITOR=${CALLERID(num)}-${ARG1})
exten = s,n,Set(TOUCH_MIXMONITOR=${CALLERID(num)}-${ARG1})
;exten = s,n,Macro(hunt-record-check,${CALLERID(num)}-${ARG1},)
;exten = s,n,Set(USER_L2yyIST=${CALLERID(num)}-${ARG1})
;exten = s,n,Set(REC_ENABLE=no)
exten = s,n,Set(CUSTOM_PROMPT=${ARG2})
exten = s,n,Log(NOTICE, "Check auto record settings.")
exten = s,n,SIPRemoveHeader(Alert-Info:)
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "uri"]?SIPAddHeader(Alert-Info: <http://127.0.0.1/${DID_ALERTINFO}>))
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "info"]?SIPAddHeader(Alert-Info: <http://127.0.0.1>\;info=${DID_ALERTINFO}))
;exten = s,n,Set(i=1)
;exten = s,n,While($[${i}])
;exten = s,n,Set(CUR_USER=${CUT(USER_LIST,,${i})})
;exten = s,n,GotoIf($["${CUR_USER}" = ""]?break)
;exten = s,n,Set(REC_ENABLE=${DB(AAUSER/${CUR_USER}/AUTORECORD)})
;exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break)
;exten = s,n,Set(REC_ENABLE=${DB(GROUP/${CUR_USER}/AUTORECORD)})
;exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break:continue)
;exten = s,n(continue),Set(i=$[${i} + 1])
;exten = s,n,EndWhile()
;exten = s,n(break),Goto(final)
;exten = s,n(final),ExecIf($["${CUSTOM_PROMPT}" != ""]?Progress())
;exten = s,n,ExecIf($["${CUSTOM_PROMPT}" != ""]?Playback(${CUSTOM_PROMPT},noanswer))
;exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?record:normal)
;exten = s,n(record),Log(NOTICE, "Auto record is enabled.")
;exten = s,n,Set(CALLFILENAME=auto-${STRFTIME(${EPOCH},,%s)}-${CDR(src)}-${CDR(dst)})
;exten = s,n,Set(CDR(RECORD_FILES)=${CDR(RECORD_FILES)}${CALLFILENAME}.${MIXMON_FORMAT}@)
;exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Progress())
;exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Playback(dialog-being-recorded,noanswer))
;exten = s,n,Set(AUTO_RECORDING=ON)
;exten = s,n,MixMonitor(${MIXMON_DIR}/${CALLFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST})
;exten = s,n(normal),ExecIf($["${CALLERID(ANI-num-valid)}" = "1"]?Set(TOUCH_MONITOR=${CALLERID(ANI-num)}-${ARG1}))
exten = s,n,ExecIf($["${CALLERID(ANI-num-valid)}" = "1"]?Set(TOUCH_MONITOR=${CALLERID(ANI-num)}-${ARG1}))
exten = s,n,ExecIf($["${CALLERID(ANI-num-valid)}" = "1"]?Set(TOUCH_MIXMONITOR=${CALLERID(ANI-num)}-${ARG1}))
exten = s,n,GotoIf($[${STRATEGY}=ORDER]?order,1:simulta,1)
exten = order,1,Set(i=1)
exten = order,n,While($[${i} <= ${NUM}])
exten = order,n,Set(CUR_MEMBER=${CUT(MEMBERS,,${i})})
exten = order,n,Noop(i = ${i})
exten = order,n,Set(DIAL_MEMBER=${DB(AAUSER/${CUR_MEMBER}/DIAL)})
exten = order,n,Macro(set-call-options,i)
exten = order,n,ExecIf($["${FROM_IVR}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = order,n,Set(AAAA=${CHANNEL(state)})
exten = order,n,Noop(${AAAA})
exten = order,n,Dial(${DIAL_MEMBER},${GTIMER},${CALL_OPTIONS}F([[context^]exten^]priority))
exten = order,n,Set(i=$[${i} + 1])
exten = order,n,EndWhile()
exten = simulta,1,Set(i=1)
exten = simulta,n,While($[${i} <= ${NUM}])
exten = simulta,n,Set(CUR_MEMBER=${CUT(MEMBERS,,${i})})
exten = simulta,n,Set(DIAL_MEMBER=${DB(AAUSER/${CUR_MEMBER}/DIAL)})
exten = simulta,n,GotoIf($[${i}=1]?header:node)
exten = simulta,n(header),Set(DIAL_STR=${DIAL_MEMBER})
exten = simulta,n,Set(i=$[${i} + 1])
exten = simulta,n,ContinueWhile()
exten = simulta,n(node),Set(DIAL_STR=${DIAL_STR}&${DIAL_MEMBER})
exten = simulta,n,Set(i=$[${i} + 1])
exten = simulta,n,EndWhile
exten = simulta,n,Macro(set-call-options,i)
exten = simulta,n,ExecIf($["${FROM_IVR}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = simulta,n,Dial(${DIAL_STR},${GTIMER},${CALL_OPTIONS})

[macro-agent-pause]
exten = s,1,Answer
exten = s,n,Set(CDR(userfield)=FC)
exten = s,n,Wait(1)
exten = s,n,Macro(user-callerid,SKIPTTL,)
exten = s,n,Set(CALLBACKNUM=${AAUSER})
exten = s,n,Set(queuemember=${CHANNEL(channeltype)}/${CALLBACKNUM})
exten = s,n,Set(dahdichan=${CHANNEL(dahdi_channel)})
exten = s,n,Noop(${dahdichan}) 
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(queuemember=${CHANNEL(channeltype)}/${dahdichan}))
exten = s,n,Noop(${queuemember})
exten = s,n,PauseQueueMember(,${queuemember})
exten = s,n,UserEvent(RefreshQueue)
exten = s,n,Playback(extension)
exten = s,n,SayDigits(${CALLBACKNUM})
exten = s,n,Playback(dictate/paused)
exten = s,n,Hangup

[macro-agent-unpause]
exten = s,1,Answer
exten = s,n,Set(CDR(userfield)=FC)
exten = s,n,Wait(1)
exten = s,n,Macro(user-callerid,SKIPTTL,)
exten = s,n,Set(CALLBACKNUM=${AAUSER})
exten = s,n,Set(queuemember=${CHANNEL(channeltype)}/${CALLBACKNUM})
exten = s,n,Set(dahdichan=${CHANNEL(dahdi_channel)})               
exten = s,n,Noop(${dahdichan})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(queuemember=${CHANNEL(channeltype)}/${dahdichan}))
exten = s,n,Noop(${queuemember})                                     
exten = s,n,UnpauseQueueMember(,${queuemember}) 
exten = s,n,UserEvent(RefreshQueue)
exten = s,n,Playback(extension)
exten = s,n,SayDigits(${CALLBACKNUM})
exten = s,n,Playback(dictate/unpaused)
exten = s,n,Hangup

[macro-app-blacklist-add]
exten = s,1,Answer
exten = s,n,Set(CDR(userfield)=FC)
exten = s,n,Wait(1)
exten = s,n,Set(NumLoops=0)
exten = s,n(start),Set(TIMEOUT(digit)=5)
exten = s,n,Set(TIMEOUT(response)=60)
exten = s,n,Read(blacknr,enter-num-blacklist&then-press-pound,,,,)
exten = s,n,GotoIf($[ ${LEN(${blacknr})} <= 32]?:invalid)
exten = s,n,SayDigits(${blacknr})
exten = s,n,Log(NOTICE, "Waiting for input blacklist number")
exten = s,n,Read(var,if-correct-press&digits/1,1,,,60)
exten = s,n,GotoIf($[ "${READSTATUS}" == "OK"]?:problem)
exten = s,n,GotoIf($[ "${var}" == "1"]?:invalid)
exten = s,n,GotoIf(${ISNULL(${blacknr})}?invalid)
exten = s,n,Set(DB(blacklist/${blacknr})=1)
exten = s,n,AGI(agi_execute_sql.py,"insert into inbound_blacklist('number') values('${blacknr}')")
exten = s,n,Playback(num-was-successfully&added)
exten = s,n,Wait(1)
exten = s,n,Hangup
exten = s,n(problem),Playback(sorry-youre-having-problems&goodbye)
exten = s,n,Hangup
exten = s,n(invalid),Macro(app-blacklist-add-invalid,${EXTEN},1)

[macro-app-blacklist-add-invalid]
exten = s,1,Set(NumLoops=$[${NumLoops} + 1])
exten = s,n,Playback(pm-invalid-option)
exten = s,n,GotoIf($[${NumLoops} < 3]?:bye)
exten = s,n,Macro(app-blacklist-add,${EXTEN},start)
exten = s,n(bye),Playback(goodbye)
exten = s,n,Hangup

[macro-app-blacklist-remove]
exten = s,1,Answer
exten = s,n,Set(CDR(userfield)=FC)
exten = s,n,Wait(1)
exten = s,n,Set(TIMEOUT(digit)=5)
exten = s,n,Set(TIMEOUT(response)=60)
exten = s,n,Read(blacknr,entr-num-rmv-blklist&then-press-pound,,,,)
exten = s,n,SayDigits(${blacknr})
exten = s,n,Log(NOTICE, "Waiting for input number be removed")
exten = s,n,Read(var,if-correct-press&digits/1,1,,,60)
exten = s,n,GotoIf($[ "${READSTATUS}" == "OK"]?:problem)
exten = s,n,GotoIf($[ "${var}" == "1"]?:bye)
exten = s,n,GotoIf(${ISNULL(${blacknr})}?bye)
exten = s,n,Log(NOTICE, "Deleting:blacklist/${blacknr} ${DB_DELETE(blacklist/${blacknr})}")
exten = s,n,AGI(agi_execute_sql.py,"delete from  inbound_blacklist where number = '${blacknr}'")
exten = s,n,Playback(num-was-successfully&removed)
exten = s,n,Wait(1)
exten = s,n,Hangup
exten = s,n(bye),Playback(goodbye)
exten = s,n,Hangup
exten = s,n(problem),Playback(sorry-youre-having-problems&goodbye)
exten = s,n,Hangup

[mcb-connect]
exten = _X.,1,Set(MCB_REMOTE=${CUT(EXTEN,-,1)})
exten = _X.,n,Set(MCB_LOCAL=${CUT(EXTEN,-,2)})
exten = _X.,n,Set(CALLERID(all)=Multi-conference Bridge <${MCB_REMOTE}>)
exten = _X.,n,Set(CHANNEL(language)=${GLOBAL_LANGUAGE})
exten = _X.,n,Set(MCB_AUTHED=1)
exten = _X.,n,Set(MCB_ADDED=0)
exten = _X.,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = _X.,n,While($[${CONF_LOCK} < 1])
exten = _X.,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = _X.,n,EndWhile
exten = _X.,n,ExecIf($["${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}" = ""]?Set(ARRAY(DB(CONF_STATUS/${MCB_LOCAL}/SIZE),DB(CONF_STATUS/${MCB_LOCAL}/ADMINS),DB(CONF_STATUS/${MCB_LOCAL}/USERS),DB(CONF_STATUS/${MCB_LOCAL}/MCBS))=0,0,0,0))
exten = _X.,n,ExecIf($["${DB(CONF_STATUS/GLOBAL/SIZE)}" = ""]?Set(DB(CONF_STATUS/GLOBAL/SIZE)=0))
exten = _X.,n,GotoIf($[${DB(CONF_STATUS/GLOBAL/SIZE)} >= ${GLOBAL(CONF_SIZE_LIMIT)}]?full,1)
exten = _X.,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/MCBS)=$[${DB(CONF_STATUS/${MCB_LOCAL}/MCBS)}+1])
exten = _X.,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/SIZE)=$[${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}+1])
exten = _X.,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}+1])
exten = _X.,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = _X.,n,Set(MCB_ADDED=1)
exten = _X.,n,Meetme(${MCB_LOCAL},Hh)
exten = full,1,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = full,n,Set(SHARED(MCB_LOCAL_FULL,${CUT(CHANNEL,\;,1)}${SPRINTF(%c,59)}2)=1)
exten = full,n,Macro(hangupcall,)
exten = h,1,NoOp(MCB_AUTHED = ${MCB_AUTHED})
exten = h,n,NoOp(MCB_ADDED = ${MCB_ADDED})
exten = h,n,Set(I=1)
exten = h,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,While($[${MCB_LOCK} < 1])
exten = h,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,EndWhile
exten = h,n,Set(MCB_DB_REMOTE_CONFIDS=${DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)})
exten = h,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)})
exten = h,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CHANNELS,\,,${I})})
exten = h,n,GotoIf($["${TOKEN}" = ""]?bad_record)
exten = h,n,GotoIf($["${TOKEN}" = "${CHANNEL}"]?good_record)
exten = h,n,Set(I=$[${I}+1])
exten = h,n,Goto(loop)
exten = h,n(bad_record),Log(NOTICE, "MCB connect: Could not find record of sucessful MCB")
exten = h,n,Goto(hangup)
exten = h,n(good_record),Set(MCB_DB_NEW_REMOTE_CONFIDS=${CUT(MCB_DB_REMOTE_CONFIDS,\,,-$[${I}-1]&$[${I}+1]-)})
exten = h,n,Set(MCB_DB_NEW_REMOTE_CHANNELS=${CUT(MCB_DB_REMOTE_CHANNELS,\,,-$[${I}-1]&$[${I}+1]-)})
exten = h,n(update_record),Set(DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)=${MCB_DB_NEW_REMOTE_CONFIDS})
exten = h,n,Set(DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)=${MCB_DB_NEW_REMOTE_CHANNELS})
exten = h,n,GotoIf($[${MCB_ADDED} != 1]?hangup))
exten = h,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = h,n,While($[${CONF_LOCK} < 1])
exten = h,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = h,n,EndWhile
exten = h,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/MCBS)=$[${DB(CONF_STATUS/${MCB_LOCAL}/MCBS)}-1])
exten = h,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/SIZE)=$[${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}-1])
exten = h,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}-1])
exten = h,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = h,n(hangup),Macro(hangupcall)

[mcb-create]
exten = _X.,1,Set(MCB_REMOTE=${CUT(EXTEN,-,1)})
exten = _X.,n,Set(MCB_LOCAL=${CUT(EXTEN,-,2)})
exten = _X.,n,Set(MCB_PARENT_CHAN=${CUT(EXTEN,-,3-)})
exten = _X.,n,GotoIf($[${LEN(${MCB_PARENT_CHAN})} = 0]?webui)
exten = _X.,n,Set(MCB_PARENT_CHAN_TYPE=${MCB_PARENT_CHAN:0:1})
exten = _X.,n,GotoIf($["${MCB_PARENT_CHAN_TYPE}" = "S"]?parent_sip)
exten = _X.,n,GotoIf($["${MCB_PARENT_CHAN_TYPE}" = "L"]?parent_local)
exten = _X.,n,GotoIf($["${MCB_PARENT_CHAN_TYPE}" = "D"]?parent_dahdi)
exten = _X.,n,Log(NOTICE, "MCB create: Unsupported channel tech type")
exten = _X.,n,Goto(h,hangup)
exten = _X.,n(parent_sip),Set(MCB_PARENT_CHAN=SIP/${MCB_PARENT_CHAN:1})
exten = _X.,n,Goto(parent_pass)
exten = _X.,n(parent_local),Set(MCB_PARENT_CHAN=Local/${CUT(MCB_PARENT_CHAN,-,1):1}@from-internal-${CUT(MCB_PARENT_CHAN,-,2)})
exten = _X.,n,Goto(parent_pass)
exten = _X.,n(parent_dahdi),Set(MCB_PARENT_CHAN=DAHDI/${MCB_PARENT_CHAN:1})
exten = _X.,n(parent_pass),Set(MCB_PASS=${IMPORT(${MCB_PARENT_CHAN},MCB_PASS)})
exten = _X.,n,Set(MCB_PASS_HASH=${SHA1(${MCB_PASS})})
exten = _X.,n,ExecIf($["${MCB_PASS_HASH}" = ""]?Set(MCB_PASS_HASH=da39a3ee5e6b4b0d3255bfef95601890afd80709))
exten = _X.,n,Goto(set_auth)
exten = _X.,n(webui),Set(MCB_PASS_HASH=${MCB_HASH})
exten = _X.,n(set_auth),ExecIf($["${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)}" = ""]?Set(DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)=${SHA1(${MCB_LOCAL}${EPOCH}${RAND(10,99)})}))
exten = _X.,n,Set(__MCB_CONF_HEADER=${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)}${MCB_PASS_HASH})
exten = _X.,n,SipAddHeader(X-Grandstream-Mcb-Req: ${MCB_CONF_HEADER})
exten = _X.,n,Set(CALLERID(all)=Multi-conference Bridge <${MCB_LOCAL}>)
exten = _X.,n,Set(__MCB_CREATE_CHAN=${CHANNEL})
exten = _x.,n,Set(__IVR_SUPPORT=no)
exten = _X.,n(dial),Dial(local/${MCB_REMOTE}@from-internal,,)
exten = h,1,Log(NOTICE, "MCB create: Remote conference ID ${SHARED(MCB_REMOTE_CONFID)})
exten = h,n,Log(NOTICE, "MCB create: Remote conference channel ${SHARED(MCB_REMOTE_CHANNEL)}")
exten = h,n,Log(NOTICE, "MCB create: Local leg full is ${SHARED(MCB_LOCAL_FULL)}")
exten = h,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?dial_failed_answer)
exten = h,n,GotoIf($["${SHARED(MCB_REMOTE_CONFID)}" = ""]?dial_failed_id)
exten = h,n,GotoIf($[${SHARED(MCB_LOCAL_FULL)} = 1]?local_full)
exten = h,n,Set(I=1)
exten = h,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,While($[${MCB_LOCK} < 1])
exten = h,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,EndWhile
exten = h,n,Set(MCB_DB_REMOTE_CONFIDS=${DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)})
exten = h,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)})
exten = h,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CONFIDS,\,,${I})})
exten = h,n,GotoIf($["${TOKEN}" = ""]?add_record)
exten = h,n,GotoIf($["${TOKEN}" = "${SHARED(MCB_REMOTE_CONFID)}"]?bad_record)
exten = h,n,Set(I=$[${I}+1])
exten = h,n,Goto(loop)
exten = h,n(add_record),Set(DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)=${MCB_DB_REMOTE_CONFIDS}${SHARED(MCB_REMOTE_CONFID)},)
exten = h,n,Set(DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)=${MCB_DB_REMOTE_CHANNELS}${SHARED(MCB_REMOTE_CHANNEL)},)
exten = h,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,Goto(hangup)
exten = h,n(local_full),Log(NOTICE, "MCB create: Failure, Local conference reported full")
exten = h,n,Goto(hangup)
exten = h,n(dial_failed_id),Log(NOTICE, "MCB create: Failure, no remote conference ID")
exten = h,n,Goto(hangup)
exten = h,n(dial_failed_answer),Log(NOTICE, "MCB create: Failure, request rejected")
exten = h,n,Goto(hangup)
exten = h,n(bad_record),Log(NOTICE, "MCB create: Failure, found duplicate conference ID")
exten = h,n(hangup),Macro(hangupcall)

[sub-dial-conference]
exten = s,1,Set(NOCDR=${ARG5})
exten = s,n,Macro(user-callerid,)
exten = s,n,Set(CDR(userfield)=CONF)
exten = s,n,SIPSetConfFocus(${ARG1})
exten = s,n(checkMcb),Log(NOTICE, "Check if call is a multi-conference bridge...")
exten = s,n,ExecIf($[${LEN(${MCB_CONF_HEADER})} = 0 & ${LEN(${SIP_HEADER(X-Grandstream-Mcb-Req)})} = 0 ]?Set(MCB_USINGMCB=0):Set(MCB_USINGMCB=1))
exten = s,n,GotoIf($["${NOCDR}" = ""]?resetted)
exten = s,n,ResetCDR()
exten = s,n,NoCDR()
exten = s,n(resetted),ExecIf($[${MCB_USINGMCB} = 0 ]?Answer())
exten = s,n,GotoIf($[${HAS_JOIN} = yes]?joined)
exten = s,n,GotoIf($[${HAS_JOIN} = invited]?invited)
exten = s,n,Set(__CONF_ROOM=${ARG1})
exten = s,n,Set(__ORI_OPTIONS=${ARG2})
exten = s,n,Set(__NODEST=${ARG1})
exten = s,n(handleMcb),GotoIf($[${MCB_USINGMCB} = 0]?nonMcb)
exten = s,n,Log(NOTICE, "MCB conference: Handle MCB request")
exten = s,n,Set(MCB_ADDED=0)
exten = s,n,Set(MCB_AUTHED=0)
exten = s,n(split_hashes),ExecIf($[${LEN(${MCB_CONF_HEADER})} != 0]?Set(MCB_RX_PWD=${MCB_CONF_HEADER:40}))
exten = s,n,ExecIf($[${LEN(${MCB_CONF_HEADER})} != 0]?Set(MCB_REMOTE_CONFID=${MCB_CONF_HEADER:0:40}))
exten = s,n,ExecIf($[${LEN(${SIP_HEADER(X-Grandstream-Mcb-Req)})} != 0]?Set(MCB_RX_PWD=${SIP_HEADER(X-Grandstream-Mcb-Req):40}))
exten = s,n,ExecIf($[${LEN(${SIP_HEADER(X-Grandstream-Mcb-Req)})} != 0]?Set(MCB_REMOTE_CONFID=${SIP_HEADER(X-Grandstream-Mcb-Req):0:40}))
exten = s,n,GotoIf($[${LEN(${MCB_RX_PWD})} = 0 & ${LEN(${MCB_REMOTE_CONFID})} = 0 ]?mcb_invalid)
exten = s,n,Set(MCB_PASS_HASH=${SHA1(${ARG3})})
exten = s,n,ExecIf($["${MCB_PASS_HASH}" = ""]?Set(MCB_PASS_HASH=da39a3ee5e6b4b0d3255bfef95601890afd80709))
exten = s,n,ExecIf($["${DB(AAUSER/${CONF_ROOM}/PUBLIC)}" = "yes"]?Set(MCB_PASS_HASH=da39a3ee5e6b4b0d3255bfef95601890afd80709))
exten = s,n,GotoIf($["${MCB_RX_PWD}" != "${MCB_PASS_HASH}"]?bad)
exten = s,n(setPwdForMcb),Set(CONFPWD=${ARG3})
exten = s,n,Log(NOTICE, "MCB conference: Check for duplicate multi-conference bridge...")
exten = s,n,Set(I=1)
exten = s,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n,While($[${MCB_LOCK} < 1])
exten = s,n,Set(MCB_LOCK=${LOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n,EndWhile
exten = s,n,Set(MCB_DB_REMOTE_CONFIDS=${DB(MCB/${CONF_ROOM}/REMOTE_CONFIDS)})
exten = s,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${CONF_ROOM}/REMOTE_CHANNELS)})
exten = s,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CONFIDS,\,,${I})})
exten = s,n,GotoIf($["${TOKEN}" = ""]?add_record)
exten = s,n,GotoIf($["${TOKEN}" = "${MCB_REMOTE_CONFID}"]?mcb_invalid)
exten = s,n,Set(I=$[${I}+1])
exten = s,n,Goto(loop)
exten = s,n(add_record),Set(DB(MCB/${CONF_ROOM}/REMOTE_CONFIDS)=${MCB_DB_REMOTE_CONFIDS}${MCB_REMOTE_CONFID},)
exten = s,n,Set(DB(MCB/${CONF_ROOM}/REMOTE_CHANNELS)=${MCB_DB_REMOTE_CHANNELS}${CHANNEL},)
exten = s,n,Set(MCB_AUTHED=1)
exten = s,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n,Set(MCB_LOCAL=${CONF_ROOM})
exten = s,n,ExecIf($["${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)}" = ""]?Set(DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)=${SHA1(${CONF_ROOM}${EPOCH}${RAND(10,99)})}))
exten = s,n,SIPSetMcbResp(${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)})
exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?Set(SHARED(MCB_REMOTE_CONFID,${MCB_CREATE_CHAN})=${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)}))
exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?Set(SHARED(MCB_REMOTE_CHANNEL,${MCB_CREATE_CHAN})=${CUT(CHANNEL,\;,1)}${SPRINTF(%c,59)}1))
exten = s,n,Goto(good)
exten = s,n(nonMcb),GotoIf($["${DB(AAUSER/${CONF_ROOM}/PUBLIC)}" = "yes"]?good)
exten = s,n,Set(hastry=0)
exten = s,n,Read(CONFPWD,conference-password-mono,,,,5)
exten = s,n,Set(CONFPWD,${FILTER(0-9,${CONFPWD})})
exten = s,n(check),Log(NOTICE, "Authentication password of conference room...")
exten = s,n,Set(hastry=$[${hastry} +1])
exten = s,n,GotoIf($["${CONFPWD}" = "${ARG3}" | "${CONFPWD}" = "${ARG4}"]?good:bad)
exten = s,n(good),Log(NOTICE, "Now,Check user is conference Participant or Administrator")
exten = s,n,ExecIf($["${CONFPWD}" = "${ARG4}"]?set(__CONF_OPTIONS=XaA${ORI_OPTIONS}))
exten = s,n,ExecIf($["${CONFPWD}" = ""]?set(__CONF_OPTIONS=${ORI_OPTIONS}))
exten = s,n,ExecIf($["${CONFPWD}" = "${ARG3}"]?set(__CONF_OPTIONS=${ORI_OPTIONS}))
exten = s,n,ExecIf($[${MCB_USINGMCB} = 1]?set(__CONF_OPTIONS=H))
exten = s,n,ExecIf($[${MCB_USINGMCB} = 1]?Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n(invited),Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = s,n,While($[${CONF_LOCK} < 1])
exten = s,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = s,n,EndWhile
exten = s,n,ExecIf($["${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}" = ""]?Set(ARRAY(DB(CONF_STATUS/${CONF_ROOM}/SIZE),DB(CONF_STATUS/${CONF_ROOM}/ADMINS),DB(CONF_STATUS/${CONF_ROOM}/USERS),DB(CONF_STATUS/${CONF_ROOM}/MCBS))=0,0,0,0))
exten = s,n,ExecIf($["${DB(CONF_STATUS/GLOBAL/SIZE)}" = ""]?Set(DB(CONF_STATUS/GLOBAL/SIZE)=0))
exten = s,n,GotoIf($[${DB(CONF_STATUS/GLOBAL/SIZE)} >= ${GLOBAL(CONF_SIZE_LIMIT)}]?full)
exten = s,n,ExecIf($["${CONFPWD}" = "${ARG4}"]?Set(USER_TYPE=ADMINS))
exten = s,n,ExecIf($["${CONFPWD}" = ""]?Set(USER_TYPE=USERS))
exten = s,n,ExecIf($["${CONFPWD}" = "${ARG3}"]?Set(USER_TYPE=USERS))
exten = s,n,ExecIf($[${MCB_USINGMCB} = 1]?Set(USER_TYPE=MCBS))
exten = s,n,Set(DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})=$[${DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})}+1])
exten = s,n,Set(DB(CONF_STATUS/${CONF_ROOM}/SIZE)=$[${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}+1])
exten = s,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}+1])
exten = s,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = s,n,ExecIf($[${MCB_USINGMCB} = 1]?Set(MCB_ADDED=1))
exten = s,n,Set(__HAS_JOIN=yes)
exten = s,n,ExecIf($[${MCB_USINGMCB} = 1]?Answer()) ;Only answer a MCB if all is successful
exten = s,n,Set(CONFRECORD=${DB(AAUSER/${ARG1}/RECORD)})
exten = s,n,ExecIf($[$["${CONFRECORD}" = "yes"] & $["${RECORD_PROMPT}" = "yes"]]?playback(dialog-being-recorded))
exten = s,n,ExecIf($[${MCB_USINGMCB} = 1]?Wait(5)) ;Allow time for MCB originator to add MCB so audio will not be missed
exten = s,n,Meetme(${CONF_ROOM},${CONF_OPTIONS})
exten = s,n,Macro(hangupcall,)
exten = s,n(joined),Meetme(${CONF_ROOM},${CONF_OPTIONS}J)
exten = s,n,Macro(hangupcall,)
exten = s,n(full),Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = s,n,ExecIf($[${MCB_USINGMCB} = 0]?Playback(im-sorry&conf-full&all-circuits-busy-now)) ;Do not Answer/Playback if MCB - prevent problems with Dial split channels
exten = s,n,Macro(hangupcall,)
exten = s,n(bad),Log(WARNING, "Authentication failured...")
exten = s,n,Wait(1)
exten = s,n,GotoIf($[${hastry} >= 3]?thankyou)
exten = s,n,GotoIf($[${MCB_USINGMCB} = 1]?hangup)
exten = s,n,Log(NOTICE, "sub-dial-conf: Asking for Password again...")
exten = s,n,Read(CONFPWD,auth-incorrect,,,,5)
exten = s,n,Set(CONFPWD,${FILTER(0-9,${CONFPWD})})
exten = s,n,Goto(check)
exten = s,n(thankyou),playback(sorry-cant-let-you-do-that&auth-thankyou)
exten = s,n(hangup),Macro(hangupcall,)
exten = h,1,GotoIf($[${MCB_USINGMCB} = 1]?mcb-connect,h,1)
exten = h,n,GotoIf($["${HAS_JOIN}" != "yes"]?exit)
exten = h,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = h,n,While($[${CONF_LOCK} < 1])
exten = h,n,Set(CONF_LOCK=${LOCK(LOCK_CONF_STATUS)})
exten = h,n,EndWhile
exten = h,n,ExecIf($["${CONFPWD}" = "${ARG4}"]?Set(USER_TYPE=ADMINS))
exten = h,n,ExecIf($["${CONFPWD}" = ""]?Set(USER_TYPE=USERS))
exten = h,n,ExecIf($["${CONFPWD}" = "${ARG3}"]?Set(USER_TYPE=USERS))
exten = h,n,Set(DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})=$[${DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})}-1])
exten = h,n,Set(DB(CONF_STATUS/${CONF_ROOM}/SIZE)=$[${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}-1])
exten = h,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}-1])
exten = h,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = h,n(exit),Macro(hangupcall,)

[macro-outisbusy]
exten = s,1,Progress
exten = s,n,GotoIf($["${EMERGENCYROUTE}" = "yes"]?emergency,1)
exten = s,n,GotoIf($["${INTRACOMPANYROUTE}" = "yes"]?intracompany,1)
exten = s,n,Playback(all-circuits-busy-now&pls-try-call-later, noanswer)
exten = s,n,Congestion(20)
exten = s,n,Hangup
exten = intracompany,1,Playback(all-circuits-busy-now&pls-try-call-later, noanswer)
exten = intracompany,n,Congestion(20)
exten = intracompany,n,Hangup
exten = emergency,1,Playback(all-circuits-busy-now&pls-try-call-later)
exten = emergency,n,Congestion(20)
exten = emergency,n,Hangup

[macro-record-check]
exten = s,1,Set(USER_LIST=${ARG1})
exten = s,n,Set(TRUNK_IND=${ARG2})
exten = s,n,Set(REC_ENABLE=no)
exten = s,n,GotoIf($["${CONF_ROOM}" != ""]?final)
exten = s,n,GotoIf($["${BLINDTRANSFER}" = ""]?check)
exten = s,n,ResetCDR(w)
exten = s,n,Set(AUTO_RECORDING=)
exten = s,n,StopMixMonitor()
exten = s,n(check),Log(NOTICE, "Check auto record settings.")
exten = s,n,ExecIf($["${OUT_AUTORECORD_${TRUNK_IND}}" = "yes"]?Set(REC_ENABLE=yes))
exten = s,n,GotoIf($["${OUT_AUTORECORD_${TRUNK_IND}}" = "yes"]?final)
exten = s,n,GotoIf($["${FROM_TRUNK}" = "yes"]?check_trunk:norext)
exten = s,n(check_trunk),Log(NOTICE, "inbound call from trunk.")
exten = s,n,GotoIf($["${CHANNEL(channeltype)}" = "SIP"]?sip_trunk)
exten = s,n,GotoIf($["${CHANNEL(channeltype)}" = "DAHDI"]?dahdi_trunk)
exten = s,n(sip_trunk),Set(TNAME=${CUT(CHANNEL(name),,1)})
exten = s,n,Set(TRUNK_IND=${CUT(TNAME,_,2)})
exten = s,n,Set(REC_ENABLE=${DB(TRUNK/SIP_${TRUNK_IND}/AUTORECORD)})
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?final:norext)
exten = s,n(dahdi_trunk),Set(TRUNK_IND=${CHANNEL(dahdi_channel)})
exten = s,n,Set(REC_ENABLE=${DB(TRUNK/DAHDI_${TRUNK_IND}/AUTORECORD)})
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?final:norext)
exten = s,n(norext),Set(i=1)
exten = s,n,While($[${i}])
exten = s,n,Set(CUR_USER=${CUT(USER_LIST,,${i})})
exten = s,n,GotoIf($["${CUR_USER}" = ""]?break)
exten = s,n,Set(REC_ENABLE=${DB(AAUSER/${CUR_USER}/AUTORECORD)})
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break)
exten = s,n,Set(REC_ENABLE=${DB(GROUP/${CUR_USER}/AUTORECORD)})
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break)
exten = s,n,Set(REC_ENABLE=${DB(QUEUE/${CUR_USER}/AUTORECORD)})
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?break:continue)
exten = s,n(continue),Set(i=$[${i} + 1])
exten = s,n,EndWhile()
exten = s,n(break),Goto(final)
exten = s,n(final),GotoIf($["${REC_ENABLE}" = "yes"]?record)
exten = s,n,MacroExit()
exten = s,n(record),Log(NOTICE, "Auto record is enabled.")
exten = s,n,Set(CALLFILENAME=auto-${STRFTIME(${EPOCH},,%s)}-${CDR(src)}-${CDR(dst)})
exten = s,n,Set(CDR(RECORD_FILES)=${CDR(RECORD_FILES)}${CALLFILENAME}.${MIXMON_FORMAT}@)
exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Progress())
exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Playback(dialog-being-recorded,noanswer))
exten = s,n,Set(AUTO_RECORDING=ON)
exten = s,n,MixMonitor(${MIXMON_DIR}/${CALLFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST})

[macro-receiveFax]
exten = s,1,Log(NOTICE, "--------receive fax----------")
exten = s,n,Set(CDR(userfield)=FAX)
exten = s,n,set(FAXDIR=${ENV(AST_BASE)}/var/spool/asterisk/fax/)
exten = s,n,set(FAXDATE=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten = s,n,ExecIf($["${RECEIVEEXTEN}" = ""]?set(RECEIVEEXTEN=${EXTTOCALL}))

exten = s,n,GotoIf($["${RECEIVEEXTEN}" = ""]?set_again:normal)
exten = s,n(set_again),set(RECEIVEEXTEN=${CALLERID(dnid)})

exten = s,n(normal),set(FAXNAME=${CALLERID(num)}-${RECEIVEEXTEN}-${FAXDATE}-${UNIQUEID}.tiff)
exten = s,n,set(FAXFILE=${FAXDIR}${FAXNAME})

exten = s,n,ExecIf($["${FAXMAIL}" = ""]?set(FAXMAIL=${DB(AAUSER/${RECEIVEEXTEN}/EMAIL)}))
exten = s,n,ExecIf($["${FAXMAIL}" = ""]?set(FAXMAIL=${DB(FAX/DEFAULT/EMAIL)}))
exten = s,n,receiveFax(${FAXFILE},f)
exten = s,n,Log(NOTICE, "${FAXSTATUS} --- ${FAXERROR}")
exten = s,n,Log(NOTICE, "pages:  --- ${FAXOPT(pages)}")
exten = s,n,Log(NOTICE, "filename:  --- ${FAXOPT(filename)}")
exten = s,n,hangup

[macro-local-callingrule-cid-0.1]
exten = s,1,Set(CALLERID(all)=${IF($[${LEN(${ARG4})} > 2]?${ARG4}:)})
exten = s,n,Goto(${ARG1},${ARG2},${ARG3})

[macro-trunkdial-failover-0.3]
exten = s,1,GotoIf($[${LEN(${FMCIDNUM})} > 6]?1-fmsetcid,1)
exten = s,n,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?1-setgbobname,1)
exten = s,n,ExecIf($[${LEN(${CID_${CALLERID(num)}})} > 2]?Set(CALLERID(num)=${CID_${CALLERID(num)}}))
exten = s,n,ExecIf($[${LEN(${ARG5})} > 2]?Set(CALLERID(all)=${ARG5}))
exten = s,n,GotoIf($[${LEN(${CALLERID(num)})} > 6]?1-dial,1)
exten = s,n,ExecIf($[${LEN(${GLOBAL_OUTBOUNDCID})} > 2]?Set(CALLERID(num)=${GLOBAL_OUTBOUNDCID}))
exten = s,n,ExecIf($[${LEN(${CID_${ARG3}})} > 6]?Set(CALLERID(all)=${CID_${ARG3}}))
exten = s,n,ExecIf($[${LEN(${ARG5})} > 2]?Set(CALLERID(all)=${ARG5}))
exten = s,n,Goto(1-dial,1)
exten = 1-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = 1-setgbobname,n,Goto(s,3)
exten = 1-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = 1-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = 1-fmsetcid,n,Goto(s,4)
exten = 1-dial,1,Dial(${ARG1})
exten = 1-dial,n,Gotoif(${LEN(${ARG2})} > 0 ?1-${DIALSTATUS},1:1-out,1)
exten = 1-CHANUNAVAIL,1,Dial(${ARG2})
exten = 1-CHANUNAVAIL,n,Hangup()
exten = 1-CONGESTION,1,Dial(${ARG2})
exten = 1-CONGESTION,n,Hangup()
exten = 1-out,1,Hangup()

[macro-member-loginlogout]
exten = s,1,Verbose(2, Logging queue member in or out of the request queue)
exten = s,n,Set(thisQueue=${thisQueueXtn})
exten = s,n,Set(queueMembers=${QUEUE_MEMBER_LIST(${thisQueue})})
exten = s,n,Set(field=1)
exten = s,n,Set(logged_in=0)
exten = s,n,Set(thisQueueMember=${CUT(queueMembers,\,,${field})})
exten = s,n,While($[${EXISTS(${thisQueueMember})}])
exten = s,n,GotoIf($["${thisQueueMember}" != "${thisActiveMember}"]?check_next)
exten = s,n,Set(logged_in=1)
exten = s,n,ExitWhile()
exten = s,n(check_next),Set(field=$[${field} + 1])
exten = s,n,Set(thisQueueMember=${CUT(queueMembers,\,,${field})})
exten = s,n,EndWhile()
exten = s,n,MacroIf($[${logged_in} = 0]?q_login:q_logout)

[macro-q_login]
exten = s,1,Verbose(2, Logging ${thisActiveMember} into the ${thisQueue} queue)
exten = s,n,AddQueueMember(${thisQueue},${thisActiveMember})
exten = s,n,Playback(silence/1)
exten = s,n,ExecIf($["${AQMSTATUS}" = "ADDED"]?Playback(agent-loginok):Playback(an-error-has-occurred))

[macro-q_logout]
exten = s,1,Verbose(2, Logged ${thisActiveMember} out of ${thisQueue} queue)
exten = s,n,RemoveQueueMember(${thisQueue},${thisActiveMember})
exten = s,n,Playback(silence/1)
exten = s,n,ExecIf($["${RQMSTATUS}" = "REMOVED"]?Playback(agent-loggedoff):Playback(an-error-has-occurred))
